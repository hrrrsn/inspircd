name: Build InspIRCd container

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Get latest InspIRCd version
        id: version
        run: |
          # Get latest release from GitHub API
          LATEST_VERSION=$(curl -s https://api.github.com/repos/inspircd/inspircd/releases/latest | \
                          jq -r '.tag_name')
          echo "INSP_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
          echo "Found latest InspIRCd version: ${LATEST_VERSION}"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Extract metadata
        id: metadata
        run: |
          # Generate date and commit tags
          echo "DATE_TAG=$(TZ='Pacific/Auckland' date +'%Y%m%d')" >> $GITHUB_ENV
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          
          # Set image name
          echo "IMAGE_NAME=ghcr.io/${{ github.repository }}/inspircd" >> $GITHUB_ENV
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and test amd64 image
        run: |
          # Build for testing
          docker build --build-arg VERSION="${{ env.INSP_VERSION }}" -t inspircd:testing .
          
          echo "* * * Image built, running tests... * * *"
          # Run tests if test script exists
          if [ -f "./run_tests.sh" ]; then
            IP=$(ip addr s \
              | grep global \
              | grep -oE '((1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])\.){3}(1?[0-9][0-9]?|2[0-4][0-9]|25[0-5])' \
              | head -n1)
            
            echo "docker swarm init on $IP"
            docker swarm init --advertise-addr $IP
            ./run_tests.sh
            echo "* * * Tests OK! * * *"
          else
            echo "No test script found, skipping tests"
          fi
      
      - name: Generate image tags
        id: tags
        run: |
          # Create comprehensive tag list
          INSP_VERSION_CLEAN=$(echo "${{ env.INSP_VERSION }}" | sed 's/^v//')
          
          tags="latest"
          tags="$tags,${{ env.INSP_VERSION }}"
          tags="$tags,${INSP_VERSION_CLEAN}"
          tags="$tags,${{ env.INSP_VERSION }}-${{ env.DATE_TAG }}"
          tags="$tags,${INSP_VERSION_CLEAN}-${{ env.DATE_TAG }}"
          
          # Format tags for build-push-action
          tags=$(echo "$tags" | tr ',' '\n' | sed "s|^|${{ env.IMAGE_NAME }}:|" | paste -sd,)
          echo "tags=$tags" >> $GITHUB_OUTPUT
          echo "Generated tags: $tags"
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: VERSION=${{ env.INSP_VERSION }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.tags.outputs.tags }}
          labels: |
            org.opencontainers.image.title=InspIRCd
            org.opencontainers.image.description=InspIRCd IRC Server
            org.opencontainers.image.version=${{ env.INSP_VERSION }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ env.DATE_TAG }}